// ===== SISTEMA DE RASTREAMENTO DE ATUALIZA√á√ïES VERCEL =====

class VercelUpdateTracker {
    constructor() {
        this.updates = [];
        this.currentUpdate = null;
    }

    // Iniciar nova atualiza√ß√£o
    startUpdate(description, files = []) {
        const updateId = this.generateUpdateId();
        this.currentUpdate = {
            id: updateId,
            description: description,
            files: files,
            timestamp: new Date().toISOString(),
            status: 'in_progress',
            vercelUrl: null,
            commitHash: null
        };
        
        console.log(`üöÄ Iniciando atualiza√ß√£o: ${description}`);
        console.log(`üìù ID da atualiza√ß√£o: ${updateId}`);
        return updateId;
    }

    // Finalizar atualiza√ß√£o com informa√ß√µes da Vercel
    completeUpdate(updateId, vercelUrl, commitHash) {
        if (this.currentUpdate && this.currentUpdate.id === updateId) {
            this.currentUpdate.status = 'completed';
            this.currentUpdate.vercelUrl = vercelUrl;
            this.currentUpdate.commitHash = commitHash;
            this.currentUpdate.completedAt = new Date().toISOString();
            
            this.updates.push({...this.currentUpdate});
            
            console.log(`‚úÖ Atualiza√ß√£o conclu√≠da: ${updateId}`);
            console.log(`üåê URL Vercel: ${vercelUrl}`);
            console.log(`üì¶ Commit: ${commitHash}`);
            
            // Gerar c√≥digo de atualiza√ß√£o
            const updateCode = this.generateUpdateCode(this.currentUpdate);
            console.log(`\nüìã C√ìDIGO DE ATUALIZA√á√ÉO VERCEL:`);
            console.log(`\n${updateCode}\n`);
            
            return updateCode;
        }
    }

    // Gerar ID √∫nico para atualiza√ß√£o
    generateUpdateId() {
        const timestamp = Date.now();
        const random = Math.random().toString(36).substr(2, 5);
        return `VU-${timestamp}-${random}`.toUpperCase();
    }

    // Gerar c√≥digo de atualiza√ß√£o formatado
    generateUpdateCode(update) {
        const code = `
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë                           üöÄ ATUALIZA√á√ÉO VERCEL                            ‚ïë
‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£
‚ïë                                                                              ‚ïë
‚ïë  üìã ID da Atualiza√ß√£o: ${update.id}                                    ‚ïë
‚ïë  üìù Descri√ß√£o: ${update.description.padEnd(60)} ‚ïë
‚ïë  ‚è∞ Data/Hora: ${new Date(update.timestamp).toLocaleString('pt-BR')}                    ‚ïë
‚ïë  üì¶ Commit Hash: ${update.commitHash || 'Pendente'}                                    ‚ïë
‚ïë  üåê URL Vercel: ${update.vercelUrl || 'Pendente'}                                    ‚ïë
‚ïë  üìÅ Arquivos Modificados: ${update.files.length} arquivo(s)                                        ‚ïë
‚ïë                                                                              ‚ïë`;

        if (update.files.length > 0) {
            code += `\n‚ïë  üìÑ Lista de Arquivos:                                                      ‚ïë`;
            update.files.forEach(file => {
                code += `\n‚ïë     ‚Ä¢ ${file.padEnd(65)} ‚ïë`;
            });
        }

        code += `
‚ïë                                                                              ‚ïë
‚ïë  üîÑ Status: ${update.status === 'completed' ? '‚úÖ CONCLU√çDA' : '‚è≥ EM ANDAMENTO'}                                    ‚ïë
‚ïë                                                                              ‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù

üéØ PR√ìXIMOS PASSOS:
1. Aguarde 2-3 minutos para o deploy autom√°tico na Vercel
2. Acesse: ${update.vercelUrl || 'URL ser√° disponibilizada ap√≥s deploy'}
3. Teste as funcionalidades implementadas
4. Verifique se tudo est√° funcionando corretamente

üìä HIST√ìRICO DE ATUALIZA√á√ïES:
${this.getUpdateHistory()}
`;

        return code;
    }

    // Obter hist√≥rico de atualiza√ß√µes
    getUpdateHistory() {
        if (this.updates.length === 0) return 'Nenhuma atualiza√ß√£o anterior.';
        
        return this.updates.slice(-5).map(update => 
            `‚Ä¢ ${update.id} - ${update.description} (${new Date(update.timestamp).toLocaleDateString('pt-BR')})`
        ).join('\n');
    }

    // Obter c√≥digo da √∫ltima atualiza√ß√£o
    getLastUpdateCode() {
        if (this.updates.length === 0) return null;
        const lastUpdate = this.updates[this.updates.length - 1];
        return this.generateUpdateCode(lastUpdate);
    }
}

// Inst√¢ncia global do tracker
const vercelTracker = new VercelUpdateTracker();

// Fun√ß√£o para iniciar atualiza√ß√£o
function startVercelUpdate(description, files = []) {
    return vercelTracker.startUpdate(description, files);
}

// Fun√ß√£o para completar atualiza√ß√£o
function completeVercelUpdate(updateId, vercelUrl, commitHash) {
    return vercelTracker.completeUpdate(updateId, vercelUrl, commitHash);
}

// Fun√ß√£o para obter c√≥digo da √∫ltima atualiza√ß√£o
function getLastUpdateCode() {
    return vercelTracker.getLastUpdateCode();
}

// Exportar para uso global
if (typeof module !== 'undefined' && module.exports) {
    module.exports = {
        VercelUpdateTracker,
        startVercelUpdate,
        completeVercelUpdate,
        getLastUpdateCode
    };
} else {
    window.VercelUpdateTracker = VercelUpdateTracker;
    window.startVercelUpdate = startVercelUpdate;
    window.completeVercelUpdate = completeVercelUpdate;
    window.getLastUpdateCode = getLastUpdateCode;
}
